{"version":3,"file":"js/45.0500edb6.js","mappings":"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","sources":["webpack://project/./src/widgets/postField/PostField.vue?0e23","webpack://project/./src/widgets/postField/PostField.vue","webpack://project/./src/features/postNavigationButon/PostNavigationButton.vue?1ba3","webpack://project/./src/features/postNavigationButon/PostNavigationButton.vue","webpack://project/./src/features/postNavigationButon/PostNavigationButton.vue?caa8","webpack://project/./src/pages/post/PostPage.vue","webpack://project/./src/pages/post/PostPage.vue?a6b0","webpack://project/./src/pages/post/PostPage.vue?efd5"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"post-content\" }\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PostField',\n  props: {\r\n    currentTitle: {type: String,  required: true}\r\n  },\n  setup(__props) {\n\r\n  const props = __props\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"h2\", null, _toDisplayString(__props.currentTitle), 1),\n    _renderSlot(_ctx.$slots, \"default\")\n  ]))\n}\n}\n\n})","import script from \"./PostField.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PostField.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport AppRouterLink from '@/shared/ui/appRouterLink/AppRouterLink.vue';\r\n    \r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PostNavigationButton',\n  props: { path: String, isForward: {type: Boolean, default: false }},\n  emits: ['click'],\n  setup(__props, { emit: __emit }) {\n\r\n    const props = __props\r\n    \r\n    const emit = __emit\r\n\r\n    const transform = props.isForward ? \"1 1\" : \"-1 1\"\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_IconArrow = _resolveComponent(\"IconArrow\")!\n  const _component_IconBase = _resolveComponent(\"IconBase\")!\n\n  return (_openBlock(), _createBlock(AppRouterLink, {\n    path: __props.path,\n    onClick: _cache[0] || (_cache[0] = ($event: any) => (emit('click')))\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_IconBase, {\n        width: \"100\",\n        height: \"100\",\n        transform: _unref(transform)\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_IconArrow)\n        ]),\n        _: 1\n      }, 8, [\"transform\"])\n    ]),\n    _: 1\n  }, 8, [\"path\"]))\n}\n}\n\n})","<template>\r\n    <AppRouterLink :path=\"path\" @click=\"emit('click')\">\r\n        <IconBase width=\"100\" height=\"100\" :transform=\"transform\">\r\n            <IconArrow />\r\n        </IconBase>\r\n    </AppRouterLink>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import AppRouterLink from '@/shared/ui/appRouterLink/AppRouterLink.vue';\r\n    \r\n    const props = defineProps({ path: String, isForward: {type: Boolean, default: false }})\r\n    \r\n    const emit = defineEmits(['click'])\r\n\r\n    const transform = props.isForward ? \"1 1\" : \"-1 1\"\r\n</script>","import script from \"./PostNavigationButton.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PostNavigationButton.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template >\r\n  <v-container fluid class=\"h-100\">\r\n    <v-row>\r\n      <v-breadcrumbs :items=\"breadcrumbs\"></v-breadcrumbs>\r\n    </v-row>\r\n    <v-row style=\"min-height: 86vh;\">\r\n      <v-col cols=\"12\">\r\n        <PostField :currentTitle=\"currentTitle!\">\r\n          <RouterView /> \r\n        </PostField>\r\n      </v-col>\r\n      <v-col class=\"align-self-end\">\r\n        <v-container fluid>\r\n          <v-row justify=\"space-between\">\r\n            <v-col >\r\n              <PostNavigationButton v-if=\"prevLink != undefined\" :path=\"prevLink.path\" @click=\"changeCurrentLink(prevLink)\" class=\"sticky-md-top\"/>\r\n            </v-col>\r\n            <v-spacer></v-spacer>\r\n            <v-col class=\"text-end\">\r\n              <PostNavigationButton v-if=\"nextLink != undefined\" :to=\"nextLink.path\" :isForward=\"true\" @click=\"changeCurrentLink(nextLink)\" />\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n  \r\n<script lang=\"ts\" setup>\r\n  import PostField from '@/widgets/postField/PostField.vue'\r\n  import PostNavigationButton from '@/features/postNavigationButon/PostNavigationButton.vue';\r\n\r\n  import { usePostsRoutesStore } from '@/entities/post/store';\r\n  import { computed, onUnmounted, onUpdated, ref } from 'vue';\r\n  import { onBeforeRouteUpdate, useRoute, useRouter } from 'vue-router';\r\n  import { findBaseName, findParentPath } from '@/shared/utils/parseUtils';\r\n\r\n  const NAME_ROUTE_LOCAL_STORAGE = \"route\"\r\n\r\n  const store = usePostsRoutesStore()\r\n  const route = useRoute()\r\n  const router = useRouter()\r\n  \r\n  let currentPostLink = store.getCurrentPath(route.path, NAME_ROUTE_LOCAL_STORAGE)\r\n  router.push({name: currentPostLink?.name })\r\n\r\n  let currentTitle = ref(currentPostLink?.title)\r\n  \r\n  // Links\r\n  let breadcrumbs = computed(() => {\r\n    return [\r\n    {\r\n      title: 'Главная',\r\n      disable: false,\r\n      to: getPathMainPage(route.fullPath)\r\n    }, \r\n    {\r\n      title: currentTitle.value!,\r\n      disable: true,\r\n      to: ''\r\n    }\r\n  ]\r\n  }) \r\n\r\n  const nextLink = computed(() => {\r\n    return store.getNextLink(route.path, currentPostLink) \r\n  })\r\n  const prevLink = computed(() => {\r\n    return store.getPrevLink(route.path, currentPostLink)\r\n  })\r\n\r\n  const changeCurrentLink = (newLink: typeof  currentPostLink) => {\r\n    currentPostLink = newLink\r\n  }\r\n\r\n  const getPathMainPage = (path: string): string => {\r\n    const baseName = findBaseName(path)\r\n    const mainPageName = findParentPath(path, baseName!)\r\n    const prevName = findParentPath(path, mainPageName!)\r\n    const mainPageParentName = findParentPath(path, prevName!)\r\n    return `/${mainPageParentName}/${mainPageName}`\r\n  }\r\n  \r\n\r\n  // ** Hooks **\r\n  onUpdated(() => {\r\n    currentPostLink = store.getCurrentPath(route.path, NAME_ROUTE_LOCAL_STORAGE)\r\n    currentTitle.value = currentPostLink?.title\r\n  })\r\n  onBeforeRouteUpdate(async (to, from) => {\r\n    store.saveCurrentPathLocalStorage(NAME_ROUTE_LOCAL_STORAGE, currentPostLink!)\r\n  })\r\n  onUnmounted(async () => {\r\n    store.deleteCurrentPathLocalStorage(NAME_ROUTE_LOCAL_STORAGE)\r\n  })\r\n</script>","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nimport PostField from '@/widgets/postField/PostField.vue'\r\n  import PostNavigationButton from '@/features/postNavigationButon/PostNavigationButton.vue';\r\n\r\n  import { usePostsRoutesStore } from '@/entities/post/store';\r\n  import { computed, onUnmounted, onUpdated, ref } from 'vue';\r\n  import { onBeforeRouteUpdate, useRoute, useRouter } from 'vue-router';\r\n  import { findBaseName, findParentPath } from '@/shared/utils/parseUtils';\r\n\r\n  const NAME_ROUTE_LOCAL_STORAGE = \"route\"\r\n\r\n  \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PostPage',\n  setup(__props) {\n\r\n  const store = usePostsRoutesStore()\r\n  const route = useRoute()\r\n  const router = useRouter()\r\n  \r\n  let currentPostLink = store.getCurrentPath(route.path, NAME_ROUTE_LOCAL_STORAGE)\r\n  router.push({name: currentPostLink?.name })\r\n\r\n  let currentTitle = ref(currentPostLink?.title)\r\n  \r\n  // Links\r\n  let breadcrumbs = computed(() => {\r\n    return [\r\n    {\r\n      title: 'Главная',\r\n      disable: false,\r\n      to: getPathMainPage(route.fullPath)\r\n    }, \r\n    {\r\n      title: currentTitle.value!,\r\n      disable: true,\r\n      to: ''\r\n    }\r\n  ]\r\n  }) \r\n\r\n  const nextLink = computed(() => {\r\n    return store.getNextLink(route.path, currentPostLink) \r\n  })\r\n  const prevLink = computed(() => {\r\n    return store.getPrevLink(route.path, currentPostLink)\r\n  })\r\n\r\n  const changeCurrentLink = (newLink: typeof  currentPostLink) => {\r\n    currentPostLink = newLink\r\n  }\r\n\r\n  const getPathMainPage = (path: string): string => {\r\n    const baseName = findBaseName(path)\r\n    const mainPageName = findParentPath(path, baseName!)\r\n    const prevName = findParentPath(path, mainPageName!)\r\n    const mainPageParentName = findParentPath(path, prevName!)\r\n    return `/${mainPageParentName}/${mainPageName}`\r\n  }\r\n  \r\n\r\n  // ** Hooks **\r\n  onUpdated(() => {\r\n    currentPostLink = store.getCurrentPath(route.path, NAME_ROUTE_LOCAL_STORAGE)\r\n    currentTitle.value = currentPostLink?.title\r\n  })\r\n  onBeforeRouteUpdate(async (to, from) => {\r\n    store.saveCurrentPathLocalStorage(NAME_ROUTE_LOCAL_STORAGE, currentPostLink!)\r\n  })\r\n  onUnmounted(async () => {\r\n    store.deleteCurrentPathLocalStorage(NAME_ROUTE_LOCAL_STORAGE)\r\n  })\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_v_breadcrumbs = _resolveComponent(\"v-breadcrumbs\")!\n  const _component_v_row = _resolveComponent(\"v-row\")!\n  const _component_RouterView = _resolveComponent(\"RouterView\")!\n  const _component_v_col = _resolveComponent(\"v-col\")!\n  const _component_v_spacer = _resolveComponent(\"v-spacer\")!\n  const _component_v_container = _resolveComponent(\"v-container\")!\n\n  return (_openBlock(), _createBlock(_component_v_container, {\n    fluid: \"\",\n    class: \"h-100\"\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_v_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_breadcrumbs, { items: _unref(breadcrumbs) }, null, 8, [\"items\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_row, { style: {\"min-height\":\"86vh\"} }, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_col, { cols: \"12\" }, {\n            default: _withCtx(() => [\n              _createVNode(PostField, {\n                currentTitle: _unref(currentTitle)!\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_RouterView)\n                ]),\n                _: 1\n              }, 8, [\"currentTitle\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_v_col, { class: \"align-self-end\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_v_container, { fluid: \"\" }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_v_row, { justify: \"space-between\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_col, null, {\n                        default: _withCtx(() => [\n                          (prevLink.value != undefined)\n                            ? (_openBlock(), _createBlock(PostNavigationButton, {\n                                key: 0,\n                                path: prevLink.value.path,\n                                onClick: _cache[0] || (_cache[0] = ($event: any) => (changeCurrentLink(prevLink.value))),\n                                class: \"sticky-md-top\"\n                              }, null, 8, [\"path\"]))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_spacer),\n                      _createVNode(_component_v_col, { class: \"text-end\" }, {\n                        default: _withCtx(() => [\n                          (nextLink.value != undefined)\n                            ? (_openBlock(), _createBlock(PostNavigationButton, {\n                                key: 0,\n                                to: nextLink.value.path,\n                                isForward: true,\n                                onClick: _cache[1] || (_cache[1] = ($event: any) => (changeCurrentLink(nextLink.value)))\n                              }, null, 8, [\"to\"]))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./PostPage.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./PostPage.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","_defineComponent","__name","props","currentTitle","type","String","required","setup","__props","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","_renderSlot","$slots","__exports__","path","isForward","Boolean","default","emits","emit","__emit","transform","_component_IconArrow","_resolveComponent","_component_IconBase","_createBlock","AppRouterLink","onClick","$event","_withCtx","_createVNode","width","height","_unref","_","NAME_ROUTE_LOCAL_STORAGE","store","usePostsRoutesStore","route","useRoute","router","useRouter","currentPostLink","getCurrentPath","push","name","ref","title","breadcrumbs","computed","disable","to","getPathMainPage","fullPath","value","nextLink","getNextLink","prevLink","getPrevLink","changeCurrentLink","newLink","baseName","findBaseName","mainPageName","findParentPath","prevName","mainPageParentName","onUpdated","onBeforeRouteUpdate","async","from","saveCurrentPathLocalStorage","onUnmounted","deleteCurrentPathLocalStorage","_component_v_breadcrumbs","_component_v_row","_component_RouterView","_component_v_col","_component_v_spacer","_component_v_container","fluid","items","style","cols","PostField","justify","undefined","PostNavigationButton","key","_createCommentVNode"],"sourceRoot":""}